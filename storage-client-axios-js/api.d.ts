/**
 * 对象存储服务
 * 提供文件、配置等对象存储服务。
 *
 * The version of the OpenAPI document: v1
 * Contact: hansin@goodvoice.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from './configuration';
import { AxiosPromise, AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from './base';
/**
 *
 * @export
 * @interface BaseStorageObject
 */
export interface BaseStorageObject {
    /**
     *
     * @type {Array<string>}
     * @memberof BaseStorageObject
     */
    owner?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof BaseStorageObject
     */
    canRead?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof BaseStorageObject
     */
    canWrite?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof BaseStorageObject
     */
    updatedAt?: string;
    /**
     *
     * @type {string}
     * @memberof BaseStorageObject
     */
    createdAt?: string;
    /**
     *
     * @type {string}
     * @memberof BaseStorageObject
     */
    clientId?: string;
    /**
     *
     * @type {string}
     * @memberof BaseStorageObject
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof BaseStorageObject
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof BaseStorageObject
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof BaseStorageObject
     */
    type?: string;
    /**
     *
     * @type {number}
     * @memberof BaseStorageObject
     */
    size?: number;
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof BaseStorageObject
     */
    additional?: {
        [key: string]: object;
    };
}
/**
 *
 * @export
 * @interface QueryResultStorageObject
 */
export interface QueryResultStorageObject {
    /**
     *
     * @type {number}
     * @memberof QueryResultStorageObject
     */
    count?: number;
    /**
     *
     * @type {Array<StorageObject>}
     * @memberof QueryResultStorageObject
     */
    data?: Array<StorageObject>;
}
/**
 *
 * @export
 * @interface StorageObject
 */
export interface StorageObject {
    /**
     *
     * @type {string}
     * @memberof StorageObject
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof StorageObject
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof StorageObject
     */
    type?: string;
    /**
     *
     * @type {number}
     * @memberof StorageObject
     */
    size?: number;
    /**
     *
     * @type {string}
     * @memberof StorageObject
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof StorageObject
     */
    clientId?: string;
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof StorageObject
     */
    additional?: {
        [key: string]: object;
    };
    /**
     *
     * @type {Array<string>}
     * @memberof StorageObject
     */
    owner?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof StorageObject
     */
    canRead?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof StorageObject
     */
    canWrite?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof StorageObject
     */
    createdAt?: string;
    /**
     *
     * @type {string}
     * @memberof StorageObject
     */
    updatedAt?: string;
}
/**
 * ConfigurationsApi - axios parameter creator
 * @export
 */
export declare const ConfigurationsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * 获取应用的用户的配置。
     * @summary 获取用户配置
     * @param {string} name
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getConfiguration: (name: string, cid?: string, options?: any) => Promise<RequestArgs>;
    /**
     * 新增或更新用户配置。
     * @summary 设置用户配置
     * @param {string} name
     * @param {{ [key: string]: object; }} requestBody
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setConfiguration: (name: string, requestBody: {
        [key: string]: object;
    }, cid?: string, options?: any) => Promise<RequestArgs>;
};
/**
 * ConfigurationsApi - functional programming interface
 * @export
 */
export declare const ConfigurationsApiFp: (configuration?: Configuration) => {
    /**
     * 获取应用的用户的配置。
     * @summary 获取用户配置
     * @param {string} name
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getConfiguration(name: string, cid?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<{
        [key: string]: object;
    }>>;
    /**
     * 新增或更新用户配置。
     * @summary 设置用户配置
     * @param {string} name
     * @param {{ [key: string]: object; }} requestBody
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setConfiguration(name: string, requestBody: {
        [key: string]: object;
    }, cid?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * ConfigurationsApi - factory interface
 * @export
 */
export declare const ConfigurationsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * 获取应用的用户的配置。
     * @summary 获取用户配置
     * @param {string} name
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getConfiguration(name: string, cid?: string, options?: any): AxiosPromise<{
        [key: string]: object;
    }>;
    /**
     * 新增或更新用户配置。
     * @summary 设置用户配置
     * @param {string} name
     * @param {{ [key: string]: object; }} requestBody
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setConfiguration(name: string, requestBody: {
        [key: string]: object;
    }, cid?: string, options?: any): AxiosPromise<void>;
};
/**
 * ConfigurationsApi - object-oriented interface
 * @export
 * @class ConfigurationsApi
 * @extends {BaseAPI}
 */
export declare class ConfigurationsApi extends BaseAPI {
    /**
     * 获取应用的用户的配置。
     * @summary 获取用户配置
     * @param {string} name
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigurationsApi
     */
    getConfiguration(name: string, cid?: string, options?: any): Promise<import("axios").AxiosResponse<{
        [key: string]: object;
    }>>;
    /**
     * 新增或更新用户配置。
     * @summary 设置用户配置
     * @param {string} name
     * @param {{ [key: string]: object; }} requestBody
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigurationsApi
     */
    setConfiguration(name: string, requestBody: {
        [key: string]: object;
    }, cid?: string, options?: any): Promise<import("axios").AxiosResponse<void>>;
}
/**
 * ObjectsApi - axios parameter creator
 * @export
 */
export declare const ObjectsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * 创建一个对象。
     * @summary 创建对象
     * @param {BaseStorageObject} baseStorageObject
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createObject: (baseStorageObject: BaseStorageObject, cid?: string, options?: any) => Promise<RequestArgs>;
    /**
     * 删除指定对象。
     * @summary 删除对象
     * @param {string} id
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteObject: (id: string, cid?: string, options?: any) => Promise<RequestArgs>;
    /**
     * 查找对象的数据。
     * @summary 查找对象
     * @param {string} [q]
     * @param {number} [page]
     * @param {number} [size]
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findObjects: (q?: string, page?: number, size?: number, cid?: string, options?: any) => Promise<RequestArgs>;
    /**
     * 获取指定对象。
     * @summary 获取对象
     * @param {string} id
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getObject: (id: string, cid?: string, options?: any) => Promise<RequestArgs>;
    /**
     * 获取对象的数据。
     * @summary 获取对象数据
     * @param {string} id
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getObjectData: (id: string, cid?: string, options?: any) => Promise<RequestArgs>;
    /**
     * 更新指定对象。
     * @summary 更新对象
     * @param {string} id
     * @param {BaseStorageObject} baseStorageObject
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putObject: (id: string, baseStorageObject: BaseStorageObject, cid?: string, options?: any) => Promise<RequestArgs>;
    /**
     * 更新对象的数据。
     * @summary 更新对象数据
     * @param {string} id
     * @param {any} body
     * @param {string} [contentDisposition]
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putObjectData: (id: string, body: any, contentDisposition?: string, cid?: string, options?: any) => Promise<RequestArgs>;
};
/**
 * ObjectsApi - functional programming interface
 * @export
 */
export declare const ObjectsApiFp: (configuration?: Configuration) => {
    /**
     * 创建一个对象。
     * @summary 创建对象
     * @param {BaseStorageObject} baseStorageObject
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createObject(baseStorageObject: BaseStorageObject, cid?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StorageObject>>;
    /**
     * 删除指定对象。
     * @summary 删除对象
     * @param {string} id
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteObject(id: string, cid?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * 查找对象的数据。
     * @summary 查找对象
     * @param {string} [q]
     * @param {number} [page]
     * @param {number} [size]
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findObjects(q?: string, page?: number, size?: number, cid?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QueryResultStorageObject>>;
    /**
     * 获取指定对象。
     * @summary 获取对象
     * @param {string} id
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getObject(id: string, cid?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StorageObject>>;
    /**
     * 获取对象的数据。
     * @summary 获取对象数据
     * @param {string} id
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getObjectData(id: string, cid?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * 更新指定对象。
     * @summary 更新对象
     * @param {string} id
     * @param {BaseStorageObject} baseStorageObject
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putObject(id: string, baseStorageObject: BaseStorageObject, cid?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * 更新对象的数据。
     * @summary 更新对象数据
     * @param {string} id
     * @param {any} body
     * @param {string} [contentDisposition]
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putObjectData(id: string, body: any, contentDisposition?: string, cid?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * ObjectsApi - factory interface
 * @export
 */
export declare const ObjectsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * 创建一个对象。
     * @summary 创建对象
     * @param {BaseStorageObject} baseStorageObject
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createObject(baseStorageObject: BaseStorageObject, cid?: string, options?: any): AxiosPromise<StorageObject>;
    /**
     * 删除指定对象。
     * @summary 删除对象
     * @param {string} id
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteObject(id: string, cid?: string, options?: any): AxiosPromise<void>;
    /**
     * 查找对象的数据。
     * @summary 查找对象
     * @param {string} [q]
     * @param {number} [page]
     * @param {number} [size]
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findObjects(q?: string, page?: number, size?: number, cid?: string, options?: any): AxiosPromise<QueryResultStorageObject>;
    /**
     * 获取指定对象。
     * @summary 获取对象
     * @param {string} id
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getObject(id: string, cid?: string, options?: any): AxiosPromise<StorageObject>;
    /**
     * 获取对象的数据。
     * @summary 获取对象数据
     * @param {string} id
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getObjectData(id: string, cid?: string, options?: any): AxiosPromise<void>;
    /**
     * 更新指定对象。
     * @summary 更新对象
     * @param {string} id
     * @param {BaseStorageObject} baseStorageObject
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putObject(id: string, baseStorageObject: BaseStorageObject, cid?: string, options?: any): AxiosPromise<void>;
    /**
     * 更新对象的数据。
     * @summary 更新对象数据
     * @param {string} id
     * @param {any} body
     * @param {string} [contentDisposition]
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putObjectData(id: string, body: any, contentDisposition?: string, cid?: string, options?: any): AxiosPromise<void>;
};
/**
 * ObjectsApi - object-oriented interface
 * @export
 * @class ObjectsApi
 * @extends {BaseAPI}
 */
export declare class ObjectsApi extends BaseAPI {
    /**
     * 创建一个对象。
     * @summary 创建对象
     * @param {BaseStorageObject} baseStorageObject
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ObjectsApi
     */
    createObject(baseStorageObject: BaseStorageObject, cid?: string, options?: any): Promise<import("axios").AxiosResponse<StorageObject>>;
    /**
     * 删除指定对象。
     * @summary 删除对象
     * @param {string} id
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ObjectsApi
     */
    deleteObject(id: string, cid?: string, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     * 查找对象的数据。
     * @summary 查找对象
     * @param {string} [q]
     * @param {number} [page]
     * @param {number} [size]
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ObjectsApi
     */
    findObjects(q?: string, page?: number, size?: number, cid?: string, options?: any): Promise<import("axios").AxiosResponse<QueryResultStorageObject>>;
    /**
     * 获取指定对象。
     * @summary 获取对象
     * @param {string} id
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ObjectsApi
     */
    getObject(id: string, cid?: string, options?: any): Promise<import("axios").AxiosResponse<StorageObject>>;
    /**
     * 获取对象的数据。
     * @summary 获取对象数据
     * @param {string} id
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ObjectsApi
     */
    getObjectData(id: string, cid?: string, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     * 更新指定对象。
     * @summary 更新对象
     * @param {string} id
     * @param {BaseStorageObject} baseStorageObject
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ObjectsApi
     */
    putObject(id: string, baseStorageObject: BaseStorageObject, cid?: string, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     * 更新对象的数据。
     * @summary 更新对象数据
     * @param {string} id
     * @param {any} body
     * @param {string} [contentDisposition]
     * @param {string} [cid]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ObjectsApi
     */
    putObjectData(id: string, body: any, contentDisposition?: string, cid?: string, options?: any): Promise<import("axios").AxiosResponse<void>>;
}
